version: '3.4'
services:
  discovery:
    image: consul:1.9.8
    hostname: localhost
    environment:
      - 'CONSUL_LOCAL_CONFIG={"datacenter": "demo_dc", "disable_update_check": true, "enable_agent_tls_for_checks": true, "key_file": "/etc/pki/testServer.key", "cert_file": "/etc/pki/testServer.cert", "ca_file": "/etc/pki/ca.pem", "verify_outgoing": true, "verify_server_hostname": false}'
      - CONSUL_BIND_INTERFACE=eth0
    # defined as host:container
    ports:
      - "8400"
      - "8500:8500"
      - "53"
    volumes:
      - ${PKI_DIR:-./pki}:/etc/pki:ro
      - ./logs:/logs:rw
    networks:
      - demo

  fabio:
    image: fabiolb/fabio:1.5.15-go1.15.5
    volumes:
      - ./fabio:/etc/fabio:ro
    links:
      - discovery
    ports:
      - "8000:8000" # GUI/management
      - "8543:8543" # TCP pass-through
      - "8643:8643" # TCP pass-through
      - "8743:8743" # TCP pass-through
      - "8843:8843" # TCP pass-through
      - "8943:8943" # TCP pass-through
      - "9043:9043" # TCP pass-through
    networks:
      - demo

  messaging:
    image: rabbitmq:3.7.7-alpine
    volumes:
      - ${RABBITMQ_CONFIG_DIR:-./rabbitmq-config}:/etc/rabbitmq
    environment:
      - TCP_PORTS=15672, 5672
      - RABBITMQ_ERLANG_COOKIE="mycookie"
    ports:
      - "15672:15672"
    networks:
      - demo
    depends_on:
      discovery:
        condition: service_started

  configuration:
    image: datawave/config-service:1.4
    entrypoint: ["java","-DlogDir=/logs","-jar","app.jar"]
    command:
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.profiles.active=consul,native,open_actuator
      - --spring.cloud.consul.host=discovery
      - --spring.cloud.config.server.native.searchLocations=file:///microservice-config
    environment:
      - 'KEYSTORE_LOCATION=classpath:/testServer.p12'
      - KEYSTORE_PASSWORD=ChangeIt
      - KEY_ALIAS=certificate
    ports:
      - "8888:8888"
    volumes:
      - ${CONFIG_DIR:-./config}:/microservice-config:ro
      - ./logs:/logs:rw
    networks:
      - demo
    depends_on:
      messaging:
        condition: service_started

  cache:
    image: datawave/hazelcast-service:1.6
    entrypoint: ["java","-DlogDir=/logs","-jar","app.jar"]
    scale: 2
    command:
      - --spring.profiles.active=consul,compose
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.cloud.consul.host=discovery
    environment:
      - "SPRING_CLOUD_CONSUL_DISCOVERY_TAGS=urlprefix-:8543"
    ports:
      - "5701"
      - "8080"
      - "8443"
    networks:
      - demo
    volumes:
      - ${PKI_DIR:-./pki}:/etc/pki:ro
      - ./logs:/logs:rw
    healthcheck:
      test: curl -f http://localhost:8080/cache/mgmt/health
      interval: 30s
      timeout: 10s
      retries: 8
      start_period: 80s
    depends_on:
      configuration:
        condition: service_started

  authorization:
    image: datawave/authorization-service:1.10
    entrypoint: ["java","-DlogDir=/logs","-jar","app.jar"]
    command:
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.profiles.active=consul,mock,compose
      - --spring.cloud.consul.host=discovery
    environment:
      - "ZOOKEEPER_HOST=${HOSTNAME}"
      - "SPRING_CLOUD_CONSUL_DISCOVERY_TAGS=urlprefix-:8643"
    ports:
      - "8080"
      - "8443"
    volumes:
      - ${PKI_DIR:-./pki}:/etc/pki:ro
      - ./logs:/logs:rw
    networks:
      - demo
    healthcheck:
      test: curl -f http://localhost:8080/authorization/mgmt/health
    depends_on:
      cache:
        condition: service_healthy

  accumulo:
    image: datawave/accumulo-service:1.2-SNAPSHOT
    entrypoint: ["java","-DlogDir=/logs","-jar","app.jar"]
    command:
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.profiles.active=consul,compose,remoteauth
      - --spring.cloud.consul.host=discovery
    environment:
      - "ZOOKEEPER_HOST=${HOSTNAME}"
      - "SPRING_CLOUD_CONSUL_DISCOVERY_TAGS=urlprefix-:8943"
    # This mapping is required to enable the metrics service to communicate
    # with host-deployed services like hadoop, zookeeper, and accumulo.
    # These values are set locally in .env via bootstrap.sh
    extra_hosts:
      - "${HOSTNAME}:${HOST_IP}"
      #- "${HOST_FQDN}:${HOST_IP}"
    ports:
      - "8080"
      - "8443"
    volumes:
      - ${PKI_DIR:-./pki}:/etc/pki:ro
      - ./logs:/logs:rw
    networks:
      - demo
    healthcheck:
      test: curl -f http://localhost:8080/accumulo/mgmt/health
    depends_on:
      authorization:
        condition: service_healthy

  audit:
    image: datawave/audit-service:1.9
    entrypoint: ["java","-DlogDir=/logs","-jar","app.jar"]
    command:
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.profiles.active=consul,compose
      - --spring.cloud.consul.host=discovery
    environment:
      - "ZOOKEEPER_HOST=${HOSTNAME}"
      - "SPRING_CLOUD_CONSUL_DISCOVERY_TAGS=urlprefix-:8743"
    ports:
      - "8080"
      - "8443"
    volumes:
      - ${PKI_DIR:-./pki}:/etc/pki:ro
      - ./logs:/logs:rw
    networks:
      - demo
    healthcheck:
      test: curl -f http://localhost:8080/audit/mgmt/health
    depends_on:
      authorization:
        condition: service_healthy

  metrics:
    image: datawave/query-metric-service:1.3-SNAPSHOT
    entrypoint: ["java","-DlogDir=/logs","-jar","app.jar"]
    scale: 1
    command:
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.profiles.active=consul,compose,remoteauth
      - --spring.cloud.consul.host=discovery
    environment:
      - "ZOOKEEPER_HOST=${HOSTNAME}"
      - "SPRING_CLOUD_CONSUL_DISCOVERY_TAGS=urlprefix-:9043"
    # This mapping is required to enable the metrics service to communicate
    # with host-deployed services like hadoop, zookeeper, and accumulo.
    # These values are set locally in .env via bootstrap.sh
    extra_hosts:
      - "${HOSTNAME}:${HOST_IP}"
      #- "${HOST_FQDN}:${HOST_IP}"
    ports:
      - "8080"
      - "8443"
    volumes:
      - ${PKI_DIR:-./pki}:/etc/pki:ro
      - ./logs:/logs:rw
    networks:
      - demo
    healthcheck:
      test: curl -f http://localhost:8080/querymetric/mgmt/health
    depends_on:
      authorization:
        condition: service_healthy

  dictionary:
    image: datawave/dictionary-service:1.2-SNAPSHOT
    entrypoint: ["java","-DlogDir=/logs","-jar","app.jar"]
    command:
      - --spring.output.ansi.enabled=ALWAYS
      - --spring.profiles.active=consul,compose,remoteauth
      - --spring.cloud.consul.host=discovery
    environment:
      - "ZOOKEEPER_HOST=${HOSTNAME}"
      - "SPRING_CLOUD_CONSUL_DISCOVERY_TAGS=urlprefix-:8843"
    # This mapping is required to enable the metrics service to communicate
    # with host-deployed services like hadoop, zookeeper, and accumulo.
    # These values are set locally in .env via bootstrap.sh
    extra_hosts:
      - "${HOSTNAME}:${HOST_IP}"
      #- "${HOST_FQDN}:${HOST_IP}"
    ports:
      - "8080"
      - "8443"
    volumes:
      - ${PKI_DIR:-./pki}:/etc/pki:ro
      - ./logs:/logs:rw
    networks:
      - demo
    healthcheck:
      test: curl -f http://localhost:8080/dictionary/mgmt/health
    depends_on:
      authorization:
        condition: service_healthy

networks:
  demo:
